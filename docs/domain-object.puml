@startuml

!define Color_White_OrangeOrange #FFF3E5
!define Color_OrangeOrange_White #E67E22

skinparam class {
  BackgroundColor Color_White_OrangeOrange
  BorderColor Black
  ArrowColor Color_OrangeOrange_White
}

enum CallType {
  Video
  Audio
}

enum ChatType {
  Simple
  Group
}

enum PaymentType {
  CreditCard
  PayPal
  ApplePay
  GooglePay
  BankTransfer
}

enum PaymentStatus {
  Pending
  Completed
  Failed
}

class User {
  +id: int
  +username: string
  +phoneNumber: string
  +profilePicture: string
  +createChat(): Chat
  +initiateCall(receiver: User, callType: CallType): Call
  +updateSettings(settings: UserSettings): UserSettings
  +makePayment(amount: decimal, currency: string, recipient: User, type: PaymentType, reason: string): PaymentTransaction
}

class Chat {
  +id: int
  +name: string
  +createdAt: timestamp
  +updatedAt: timestamp
  +members: User[]
  +addMember(user: User)
  +callType: ChatType
  +addMessage(message: ChatMessage)
  +removeMessage(message: ChatMessage)
  +pinMessage(message: ChatMessage)
  +unpinMessage(message: ChatMessage)
}

class ChatMessage {
  +id: int
  +content: string
  +createdAt: timestamp
  +author: User
  +chat: Chat
  +deleteMessage()
  +forwardMessage(chat: Chat)
  +addAttachment(attachment: Attachment)
  +removeAttachment(attachment: Attachment)
  +editMessage(newContent: string)
  +replyToMessage(message: ChatMessage)
  +addReaction(reaction: string)
  +removeReaction(reaction: string)
}

class Call {
  +id: int
  +startTime: timestamp
  +endTime: timestamp
  +participants: User[]
  +callType: CallType
  +initiator: User
  +evictParticipant(user: User)
  +inviteParticipant(user: User)
}

class Attachment {
  +id: int
  +type: string
  +url: string
  +createdAt: timestamp
  +message: ChatMessage
}

class PaymentTransaction {
  +id: int
  +amount: decimal
  +currency: string
  +timestamp: timestamp
  +sender: User
  +recipient: User
  +type: PaymentType
  +reason: string
  +status: PaymentStatus
  +confirmPayment(): PaymentTransaction
  +cancelPayment(): PaymentTransaction
  +refundPayment(user: User): PaymentTransaction
}

class Order {
  +id: int
  +items: Product[]
  +totalAmount: decimal
  +timestamp: timestamp
  +status: string
  +buyer: User
  +seller: User
}

class Product {
  +id: int
  +name: string
  +description: string
  +price: decimal
  +seller: User
}

class UserSettings {
  +id: int
  +user: User
  +language: string
  +theme: string
  +notifications: boolean
  +blockedUsers: User[]
}

User --> Chat: Creates
User --> Chat: Sends Message
User --> Call: Initiates Call
User --> UserSettings: Accesses and Updates

Chat o-- "0..*" User: Contains
Chat --> ChatMessage: Has
ChatMessage --> Attachment: Contains (Optional)

User --> PaymentTransaction: Initiates Payment
PaymentTransaction --> User: Payment Confirmation

User --> Order: Places Order
Order --> Product: Contains
Order --> User: Buyer
Order --> User: Seller

ChatMessage --> ChatMessage: Edit Message
ChatMessage --> Chat: Reply To Message
ChatMessage --> ChatMessage: Add Reaction
ChatMessage --> ChatMessage: Remove Reaction
ChatMessage --> Chat: Forward Message
ChatMessage --> Attachment: Add Attachment
ChatMessage --> Attachment: Remove Attachment

Call --> User: Evict Participant
Call --> User: Invite Participant

PaymentTransaction --> PaymentTransaction: Confirm Payment
PaymentTransaction --> PaymentTransaction: Cancel Payment
PaymentTransaction --> User: Refund Payment
PaymentTransaction --> User: Send Payment
PaymentTransaction --> User: Receive Payment
PaymentTransaction --> User: Request Payment
PaymentTransaction --> User: Accept Payment
PaymentTransaction --> User: Reject Payment

Product --> User: Add Product To Wishlist
Product --> User: Remove Product From Wishlist

UserSettings --> User: Block User
UserSettings --> User: Unblock User
UserSettings --> Chat: Mute Chat
UserSettings --> Chat: Unmute Chat

@enduml
